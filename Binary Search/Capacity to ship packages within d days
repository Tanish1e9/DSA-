LC link: https://leetcode.com/problems/capacity-to-ship-packages-within-d-days/

class Solution {
public:
    bool f(int mid,vector<int>&weights,int days){
        long ans=0;
        int req=1;
        for(int i=0;i<weights.size();i++){
            if(ans+weights[i]<=mid) ans+=weights[i];
            else{
                req+=1;
                ans=weights[i];
            }
        }
        return req<=days;
    }
    int bin(vector<int>&weights,int days){
        int l=*max_element(weights.begin(),weights.end());
        int r=accumulate(weights.begin(),weights.end(),0);
        while(l<=r){
            int mid=l+(r-l)/2;
            if(f(mid,weights,days)) r=mid-1;
            else l=mid+1;
        }
        return l;
    }
    int shipWithinDays(vector<int>& weights, int days) {
        return bin(weights,days);
    }
};
