LC link: https://leetcode.com/problems/minimum-number-of-days-to-make-m-bouquets/description/

class Solution {
public:
    bool f(int mid,int m,int k,vector<int>&bloomDay){
        int count=0;
        int bouq=0;
        for(int i=0;i<bloomDay.size();i++){
            if(bloomDay[i]<=mid) count+=1;
            else {
                bouq+=count/k;
                count=0;
            }
        }
        bouq+=count/k;
        if(bouq>=m)return true;
        return false;
    }
    int bin(vector<int>&bloomDay,int m,int k){
        int l=*min_element(bloomDay.begin(),bloomDay.end());
        int r=*max_element(bloomDay.begin(),bloomDay.end());
        while(l<=r){
            int mid=l+(r-l)/2;
            if(f(mid,m,k,bloomDay)) r=mid-1;
            else l=mid+1;
        }
        return l;
    }
    int minDays(vector<int>& bloomDay, int m, int k){
        if(bloomDay.size()<m*long(k)) return -1;
        return bin(bloomDay,m,k);
    }
};
