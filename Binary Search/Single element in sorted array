LC link: https://leetcode.com/problems/single-element-in-a-sorted-array/

// Method 1: Mera original solution h simple sa thought process h but next method is cleaner
class Solution {
public:
    int bin(vector<int>&nums){
        int l=0;
        int r=nums.size()-1;
        while(l<=r){
            int mid=l+(r-l)/2;
            if((mid<=0 || nums[mid]!=nums[mid-1]) && 
            (mid+1>=nums.size() || nums[mid]!=nums[mid+1])) return nums[mid];
            
            if(nums[mid]==nums[mid-1]){
                if((mid-l+1)%2==0) l=mid+1;
                else r=mid-2;
            }
            else if(nums[mid]==nums[mid+1]){
                if((r-mid+1)%2==0) r= mid-1;
                else l=mid+2;
            }
        }
        return nums[l];
    }
    int singleNonDuplicate(vector<int>& nums) {
        if(nums.size()==1) return nums[0];
        return bin(nums);
    }
};

// Method 2:
class Solution {
public:
    int bin(vector<int>&nums){
        int l=0;
        int r=nums.size()-1;
        if(nums[l]!=nums[l+1]) return nums[l];
        if(nums[r]!=nums[r-1]) return nums[r];
        l++;r--;
        // hamesha jo single element h even index pe hoga
        while(l<=r){
            int mid=l+(r-l)/2;
            if(nums[mid]!=nums[mid-1] && nums[mid]!=nums[mid+1]) return nums[mid];

            if(mid%2==0){           // even odd chalta h single k pehle
                if(nums[mid]==nums[mid+1]) l=mid+1;
                else r=mid-1;
            }
            else{
                if(nums[mid]==nums[mid-1]) l=mid+1;
                else r=mid-1;
            }
            // Dekh agar mid even h to uske aage wale se agar equal hota iska mtlb single element aage h agar ni to piche similarly opposite when mid is odd and we are done
        }
        return -1;
    }
    int singleNonDuplicate(vector<int>& nums) {
        if(nums.size()==1) return nums[0];
        return bin(nums);
    }
};
