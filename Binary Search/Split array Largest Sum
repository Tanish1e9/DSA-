LC link: https://leetcode.com/problems/split-array-largest-sum/description/

class Solution {
public:
    bool f(int mid,vector<int>&nums,int k){
        int c=0;
        int splits=1;
        for(int i=0;i<nums.size();i++){
            if(c+nums[i]<=mid) c+=nums[i];
            else{
                splits+=1;
                c=nums[i];
            }
        }
        return splits<=k;
    }
    int bin(vector<int>&nums,int k){
        int l=*max_element(nums.begin(),nums.end());
        int r=accumulate(nums.begin(),nums.end(),0);
        while(l<=r){
            int mid=l+(r-l)/2;
            if(f(mid,nums,k)) r=mid-1;
            else l=mid+1;
        }
        return l;
    }
    int splitArray(vector<int>& nums, int k) {
        return bin(nums,k);
    }
};
