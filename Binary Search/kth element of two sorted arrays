Code Studio link: https://www.naukri.com/code360/problems/k-th-element-of-2-sorted-array_1164159?leftPanelTabValue=PROBLEM

#include <bits/stdc++.h>
// int kthElement(vector<int> &arr1, vector<int>& arr2, int n, int m, int k){
//     if(n>m) return kthElement(arr2, arr1, m, n, k);
//     int l=max(0,k-m);
//     int r=min(k,n);
//     while(l<=r){
//         int mid=l+(r-l)/2;

//         // if(k-mid>m) {l=mid+1;continue;}
//         // if(k-mid<0) {r=mid-1;continue;}
        
//         int l1=(mid-1>=0 && mid-1<n)?arr1[mid-1]:INT_MIN;
//         int l2=(k-mid>=1 && k-mid-1<m)?arr2[k-mid-1]:INT_MIN;
//         int r1=(mid<n)?arr1[mid]:INT_MAX;
//         int r2=(k-mid<m)?arr2[k-mid]:INT_MAX;

//         if(max(l1,l2)<=min(r1,r2)){
//             return max(l1,l2);
//         }
//         else if(l1<r2) l=mid+1;
//         else r=mid-1;
//     }
//     return -1;
// }
int helper(int p,int q,int r,int s,vector<int>&arr1,vector<int>&arr2,int k){
    if(k==1) return min(arr1[p],arr2[r]);
    int mid1=(q-p)/2;
    int mid2=(s-r)/2;
    if(mid1==0){
        if(arr1[p]<arr2[r+k-2]) return arr2[r+k-2];
        else if(arr1[p]<arr2[r+k-1]) return arr1[p];
        else return arr2[r+k-1];
    }
    if(mid2==0){
        if(arr2[r]<arr1[p+k-2]) return arr1[p+k-2];
        else if(arr2[r]<arr1[p+k-1]) return arr2[r];
        else return arr1[p+k-1];
    }
    if(mid1+mid2<k){
        if(arr1[p+mid1]<arr2[r+mid2]) return helper(p+mid1,q,r,s,arr1,arr2,k-mid1);
        else return helper(p,q,r+mid2,s,arr1,arr2,k-mid2);
    }
    else{
        if(arr1[p+mid1]<arr2[r+mid2]) return helper(p,q,r,r+mid2,arr1,arr2,k);
        else return helper(p,p+mid1,r,s,arr1,arr2,k);
    }
    return -1;
}
int kthElement(vector<int> &arr1, vector<int>& arr2, int n, int m, int k){
   return helper(0,n,0,m,arr1,arr2,k);
}
