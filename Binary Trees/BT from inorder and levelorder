CodeStudio link: https://www.naukri.com/code360/problems/construct-binary-tree-from-in-order-and-level-order_2824774?leftPanelTabValue=PROBLEM

TreeNode* getTreeFromInorderAndLevelorder(int n, vector<int> &inOrder, vector<int> &levelOrder){
	if(n==0) return NULL;
	map<int,int> index;
	for(int i=0;i<inOrder.size();i++) {
		index[inOrder[i]] = i;
	}
	int lstart = 0;
	TreeNode* root = new TreeNode(levelOrder[lstart++]);
	queue<pair<TreeNode*,pair<int,int>>> q;
	q.push({root,{0,inOrder.size()-1}});	
	while(!q.empty()) {
		TreeNode* curr = q.front().first;
		int istart = q.front().second.first;
		int iend = q.front().second.second;
		q.pop();
		int idx_curr = index[curr->data];
		if(istart <= idx_curr-1) {
			curr->left = new TreeNode(levelOrder[lstart++]);
			q.push({curr->left, {istart, idx_curr - 1}});
		}
		if(idx_curr + 1 <= iend) {
			curr->right = new TreeNode(levelOrder[lstart++]);
			q.push({curr->right, {idx_curr+1, iend}});
		}
	}
	return root;
}
