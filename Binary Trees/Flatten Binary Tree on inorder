GFG link: https://www.geeksforgeeks.org/problems/flatten-bst-to-sorted-list--111950/1

Node* next = 0;
void helper(Node* root) {
  if(root==NULL) return;
  helper(root->right);
  root->right = next;
  next = root;
  helper(root->left);
  root->left = 0;
}
Node *flattenBST(Node *root) {
  // helper(root);
  // return next;
  Node* prev = 0;
  Node* curr = root;
  Node* ans = 0;
  while(curr) {
      if(curr->left) {
          Node* temp = curr->left;
          while(temp->right && temp->right != curr) temp = temp->right;
          if(temp->right) {
              temp->right = NULL;
              // Yaha prev->left = 0 kyu ni kr skte?
              // islie ki dry run krke dekhna left child ka rightmost pe jaana hota h na
              // Agar prev ka krte chalenge to dikkkat ho jayega
              // islie curr->left = 0 tabhi kro jab right move kro 
              // ab niche wala else me to curr->left already 0 hai na
              // to yaha pe bas kr die and we are done
              if(prev) {
                  prev->right = curr;
              }
              curr->left = 0;
              prev = curr;
              curr = curr->right;
          } else {
              temp->right = curr;
              curr = curr->left;
          }
      }
      else {
          if(!ans) ans = curr;
          if(prev) prev->right = curr;
          prev = curr;
          curr = curr->right;
          
      }
  }
  return ans;
}
