LC link: https://leetcode.com/problems/path-sum/

// M-1
bool hasPathSum(TreeNode* root, int targetSum) {
        if(root==0) return false;
        if(root->val==targetSum && root->left==0 && root->right==0) return 1;
        return max(hasPathSum(root->left,targetSum-root->val),hasPathSum(root->right,targetSum-root->val));
    }

// M-2
bool helper(TreeNode* root, int sum, int t) {
        if(root==NULL) return false;
        if(root->left==NULL && root->right==NULL) {
            return sum + root->val == t;
        }
        bool left = helper(root->left, sum + root->val, t);
        if(left) return true;
        bool right = helper(root->right, sum + root->val, t);
        if(right) return true;
        return false;
    }
    bool hasPathSum(TreeNode* root, int targetSum) {
        return helper(root, 0, targetSum);
    }
