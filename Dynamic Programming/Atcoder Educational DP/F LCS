#include<bits/stdc++.h>
using namespace std;
#define int long long
void longestCommonSubsequence(string& s, string& t) {
    int m=s.size();
    int n=t.size();
    vector<vector<int>> memo(m+1,vector<int>(n+1,0));
    for(int i=1;i<=m;i++){
        for(int j=1;j<=n;j++){
            if(s[i-1]==t[j-1]) memo[i][j]=1+memo[i-1][j-1];
            else{
                int pick = memo[i-1][j];
                int npick = memo[i][j-1];
                memo[i][j] = max(pick,npick);
            }
        }
    }
    int i=m,j=n;
    string ans;
    while(i>=1 && j>=1){
        if(s[i-1]==t[j-1]){
            ans.push_back(s[i-1]);
            i--;j--;
        }
        else{
            if(memo[i-1][j] > memo[i][j-1]) i--;
            else j--;
        }
    }
    reverse(ans.begin(),ans.end());
    cout << ans << endl;
}
signed main(){
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
    string s,t;
    cin >> s >> t;
    longestCommonSubsequence(s,t);
    return 0;
}
