Algozenith link: https://maang.in/problems/Convex-Polygon-Triangulation-200?resourceUrl=cs70-cp479-pl3267-rs200&returnUrl=%5B%22%2Fcourses%2FDP-Workshop-Vivek-Gupta-Youtube-70%3Ftab%3Dchapters%22%5D


// Dekh simple question hi h
// LR dp ka intuition to aa hi gya tha bas ye problem aa rha tha ki ranges ko kaise represent kre
// since ho skta h bich se line maar die to range represent nahi hoga thik se
// uske lie na hmesha l,r points ko choose kr lo... basically isse ek side choose hoga
// ab ye side kisi na kisi triangle ka to part hoga hi na (yaha catch h aise triangle ho skte h jinka side
// polygon ke ek bhi side se overlap na kre but polygon ka har ek side kisi na kisi triangle me hoga hi)
// to ye jo side choose hua ab iske lie bas point choose kr lo l+1 to r-1 me
// isse dekhna ranges sahi rhenge break nahi honge

#include<bits/stdc++.h>
using namespace std;
#define int long long
int dp[100][100];
int helper(int l, int r, vector<int> &arr) {
    if(r-l+1 < 3) return 0;
    if(dp[l][r]!=-1) return dp[l][r];

    int ans = 1e18;
    for(int i=l+1;i<=r-1;i++) {
        ans = min(ans, arr[l]*arr[r]*arr[i] + helper(l, i, arr) + helper(i, r, arr));
    }
    return dp[l][r] = ans;
}
signed main() {
    ios::sync_with_stdio(false);
    cin.tie(0);
    cout.tie(0);
    int t;
    cin >> t;
    while(t--) {
        int n;
        cin >> n;
        vector<int> arr(n);
        for(int i=0;i<n;i++) cin >> arr[i];
        memset(dp, -1, sizeof(dp));
        cout << helper(0, n-1, arr) << "\n";
    }
    return 0;
}
