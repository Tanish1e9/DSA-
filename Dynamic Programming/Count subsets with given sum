GFG link: https://www.geeksforgeeks.org/problems/perfect-sum-problem5633/1

    int mod=1e9+7;
    int f(int i,int arr[],vector<vector<int>>&memo,int sum){
        if(i==0){
            if(sum==0) return (arr[0]==0)+1;
            return arr[0]==sum;
        }
        if(memo[i][sum]!=-1) return memo[i][sum];
        int pick = 0;
        if(sum>=arr[i]) pick=f(i-1,arr,memo,sum-arr[i])%mod;
        int npick = f(i-1,arr,memo,sum)%mod;
        return memo[i][sum]=(pick+npick)%mod;
    }
    int perfectSum(int arr[], int n, int sum){
        // vector<vector<int>>memo(n,vector<int>(sum+1,-1));
        // return f(n-1,arr,memo,sum);
        
        // vector<vector<int>>memo(n,vector<int>(sum+1,0));
        // for(int i=0;i<n;i++){
        //     for(int k=0;k<=sum;k++){
        //         if(i==0) {
        //             if(k==0) memo[i][k]=(arr[0]==0)+1;
        //             else memo[i][k] = (arr[0]==k);
        //         }
        //         else{
        //             int pick=0;
        //             if(k>=arr[i]) pick=memo[i-1][k-arr[i]]%mod;
        //             int npick = memo[i-1][k]%mod;
        //             memo[i][k]=(pick+npick)%mod;
        //         }
        //     }
        // }
        // return memo[n-1][sum];
        
        vector<int>prev(sum+1,0);
        vector<int>curr(sum+1,0);
        for(int i=0;i<n;i++){
            for(int k=0;k<=sum;k++){
                if(i==0){
                    if(k==0) curr[k]=(arr[0]==0)+1;
                    else curr[k] = (arr[0]==k);
                }
                else{
                    int pick=0;
                    if(k>=arr[i]) pick=prev[k-arr[i]]%mod;
                    int npick = prev[k]%mod;
                    curr[k]=(pick+npick)%mod;
                }
            }
            prev=curr;
        }
        return prev[sum];
    }
