LC link: https://leetcode.com/problems/best-time-to-buy-and-sell-stock-with-cooldown/description/

// Memoization
int helper(int i, int can_sell,auto &prices, auto &memo) {
    if(i>=prices.size()) return 0;
    if(memo[i][can_sell]!=-1) return memo[i][can_sell];
    if(can_sell) {
        return memo[i][can_sell] = max(prices[i] + helper(i+2, 0, prices, memo), helper(i+1, 1, prices, memo));
    }
    return memo[i][can_sell] = max(-prices[i] + helper(i+1, 1, prices, memo), helper(i+1, 0, prices, memo));
}
int maxProfit(vector<int>& prices) {
    int n = prices.size();
    vector<vector<int>> memo(n, vector<int>(2,-1));
    return helper(0,0,prices,memo);
}

// Tabulation
int maxProfit(vector<int>& prices) {
    int n = prices.size();
    vector<vector<int>> memo(n+2, vector<int>(2,0));
    for(int i=n-1;i>=0;i--) {
        memo[i][1] = max(prices[i] + memo[i+2][0], memo[i+1][1]);
        memo[i][0] = max(-prices[i] + memo[i+1][1], memo[i+1][0]);
    }
    return memo[0][0];
}

// Iske baad 3 variables use krke space optimsation kr skte ho 
