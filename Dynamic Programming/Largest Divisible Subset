LC link: https://leetcode.com/problems/largest-divisible-subset/

    // literally same to same LIS wala jaisa h halka sa condition badle h bas
    vector<int> largestDivisibleSubset(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        int n = nums.size();
        vector<int> parent(n, -1);
        vector<int> lis_ending(n, 1);
        int last_ind = 0;
        int max_val = 0;
        for(int i=0;i<n;i++) {
            for(int prev = 0;prev < i;prev++) {
                if(nums[i]%nums[prev]==0 && lis_ending[prev] + 1 > lis_ending[i]) {
                    lis_ending[i] = 1 + lis_ending[prev];
                    parent[i]=prev;
                }
            }
            if(lis_ending[i] > max_val) {
                max_val = lis_ending[i];
                last_ind = i;
            }
        }

        vector<int> ans;
        while(parent[last_ind]!=-1) {
            ans.push_back(nums[last_ind]);
            last_ind = parent[last_ind];
        }
        ans.push_back(nums[last_ind]);
        reverse(ans.begin(), ans.end());
        return ans;
    }
