LC link: https://leetcode.com/problems/minimum-insertion-steps-to-make-a-string-palindrome/description/

    int lcs(string &s,string &t){
        int m=s.size();
        int n=t.size();
        vector<vector<int>> memo(m+1,vector<int>(n+1,0));
        for(int i=1;i<=m;i++){
            for(int j=1;j<=n;j++){
                if(s[i-1]==t[j-1]){
                    memo[i][j]=1+memo[i-1][j-1];
                }
                else memo[i][j] =max(memo[i][j-1],memo[i-1][j]);
            }
        }
        return memo[m][n];
    }
    int minInsertions(string s) {
        string t=s;
        reverse(t.begin(),t.end());
        return s.size()-lcs(s,t);
    }
