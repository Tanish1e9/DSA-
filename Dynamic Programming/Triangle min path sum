LC link: https://leetcode.com/problems/triangle/description/

    int f(int i,int j,auto&grid,auto&memo){
        if(i==grid.size()) return 0;
        if(memo[i][j]!=-1) return memo[i][j];
        int down = grid[i][j]+f(i+1,j,grid,memo);
        int right = grid[i][j]+f(i+1,j+1,grid,memo);
        return memo[i][j]=min(down,right);
    }
    int minimumTotal(vector<vector<int>>& grid) {
        int m=grid.size();
        // vector<vector<int>> memo(m,vector<int>(m,-1));
        // return f(0,0,grid,memo);

        // vector<vector<int>> memo(m+1,vector<int>(m,0));
        // for(int i=m-1;i>=0;i--){
        //     for(int j=grid[i].size()-1;j>=0;j--){
        //         int down = grid[i][j]+f(i+1,j,grid,memo);
        //         int right = grid[i][j]+f(i+1,j+1,grid,memo);
        //         memo[i][j]=min(down,right);
        //     }
        // }
        // return memo[0][0];

        vector<int>next(m+1,0),curr(m+1,0);
        for(int i=m-1;i>=0;i--){
            for(int j=grid[i].size()-1;j>=0;j--){
                int down = grid[i][j]+next[j];
                int right= grid[i][j]+next[j+1];
                curr[j]=min(down,right);
            }
            next=curr;
        }
        return next[0];
    }
