GFG link: https://www.geeksforgeeks.org/problems/pots-of-gold-game/1?category=

    // Simply yaha alice k lie function likha gya h and subsequent move me Bob aisa hi chunega ki Alice ko next move me minimum mile
    // Hence, yaha min krke kr dia
    // M-1
    int f(vector<int>&A,int i,int j,vector<vector<int>>&memo){
        if(i>j) return 0;
        if(memo[i][j]!=-1) return memo[i][j];
        int left = A[i]+min(f(A,i+2,j,memo),f(A,i+1,j-1,memo));
        int right = A[j]+min(f(A,i,j-2,memo),f(A,i+1,j-1,memo));
        return memo[i][j]=max(left,right);
    }
    int maxCoins(vector<int>&A,int n){
        vector<vector<int>> memo(n,vector<int>(n,-1));
	    return f(A,0,n-1,memo);
    }

    // M-2 
    // Now yaha to sirf 2 hi possibilities thi islie aise likh paye 
    // par suppose m choices hote to aise directly ni likh paate hmlog
    // to uske lie ek difference method h jo ki har jagah chal jayega
    // isme basically har player  khud ka - dusra ka  jo ye diff h usko maximise krna chahta h
    // Also see Stone Game 2 

    int f(int i,int j,vector<int>&piles,auto&memo){
        if(i>j) return 0;
        if(memo[i][j]!=-1) return memo[i][j];

        int left = piles[i] - f(i+1,j,piles,memo);
        int right = piles[j] - f(i,j-1,piles,memo);
    
        return memo[i][j] = max(left,right);
    }
    int maxCoins(vector<int>&piles,int n){
        vector<vector<int>>memo(n,vector<int>(n,-1));
        int diff = f(0,n-1,piles,memo);
        int sum=0;
        for(int i=0;i<n;i++){
            sum += piles[i];
        }
        return (sum+diff)/2;
    }
