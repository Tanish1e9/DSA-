CSES link: https://cses.fi/problemset/task/1672/

#include<bits/stdc++.h>
using namespace std;
#define int long long
void floyd(int n, int m, auto &distances) {
	for(int k=1;k<=n;k++) {
		distances[k][k] = 0;
		for(int i=1;i<=n;i++) {
			for(int j=1;j<=n;j++) {
				distances[i][j] = min(distances[i][j], distances[i][k] + distances[k][j]);
			}
		}
	}
}
signed main() {
	ios::sync_with_stdio(false);
	cin.tie(nullptr);
	cout.tie(nullptr);
	int n, m, q;
	cin >> n >> m >> q;
	vector<vector<int>>distances(n+1, vector<int>(n+1,1e18));
	for(int j=0;j<m;j++) {
		int a,b,c;
		cin >> a >> b >> c;
		distances[a][b] = min(c, distances[a][b]);
		distances[b][a] = min(c, distances[b][a]);
	}
	floyd(n,m,distances);
	while(q--) {
		int a, b;
		cin >> a >> b;
		cout << ((distances[a][b]!=1e18) ? distances[a][b] : -1) << "\n";
	}
	return 0;
}
