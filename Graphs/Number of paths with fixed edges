CSES link: https://cses.fi/problemset/task/1723/

// ye binary exponentiation ka concept lag rha
// it's like A^4 = A^2 * A^2 kr rhe na to 2 edge me jaha se jaha pahuch rakhe unka data ko multiply krne se 4 ka aa jata
// because i to j in k length =  (i to x) * (x to j) summed over all x aur ye paths k/2 k/2 ke ho ya matrix powers ka sum k aa jaye wahi chahye basically
// yaha BFS ni lag skta because k<=1e9 hai to soch lo

#include<bits/stdc++.h>
using namespace std;
#define int long long
const int mod = 1e9+7;        // yaha const na likhne se TLE ho ja rha bhagwan hi jane kahe but thik h const likhke accept ho rha kuch glitch hoga ig
vector<vector<int>> mult(vector<vector<int>>&a,vector<vector<int>>&b){
    int rows = a.size();
    int cols = b[0].size();
    int comm = b.size();
    vector<vector<int>> ans(rows,vector<int>(cols,0));
    for(int i=0;i<rows;i++){
        for(int j=0;j<cols;j++){
            for(int k=0;k<comm;k++){
                ans[i][j]= (ans[i][j]+ (a[i][k]*b[k][j])%mod)%mod;
            }
        }
    }
    return ans;
}
int func(vector<vector<int>>&mat,int n,int k){
    vector<vector<int>> ans(n,vector<int>(n,0));
    for(int i=0;i<n;i++) ans[i][i]=1;
    while(k){
        if(k&1){
            k--;
            ans = mult(ans,mat);
        }
        else{
            k>>=1;
            mat = mult(mat,mat);
        }
    }
    return ans[0][n-1];
}
signed main(){
    int n,m,k;
    cin >> n >> m >> k;
    vector<vector<int>> mat(n,vector<int>(n,0));
    for(int i=0;i<m;i++){
        int x,y;
        cin >> x>> y;
        mat[x-1][y-1]++;
    }
    cout << func(mat,n,k) << endl;
    return 0;
}
