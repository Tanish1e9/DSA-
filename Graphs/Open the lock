LC link: https://leetcode.com/problems/open-the-lock/

    int bfs(auto&deadends,auto&target){
        if(target=="0000") return 0;
        if(deadends.find("0000")!=deadends.end()) return -1;
        queue<pair<string,int>>q;
        q.push({"0000",0});
        while(!q.empty()){
            auto curr=q.front();
            q.pop();
            for(int i=0;i<4;i++){
                string temp=curr.first;
                int num = temp[i]-'0';
                char x = (num+1)%10 + '0';
                char y = (num+9)%10 + '0';
                temp[i]=x;
                if(temp == target) return curr.second+1;
                if(deadends.find(temp)==deadends.end()){
                    deadends.insert(temp);
                    q.push({temp,curr.second+1});
                }
                temp[i]=y;
                if(temp == target) return curr.second+1;
                if(deadends.find(temp)==deadends.end()){
                    deadends.insert(temp);
                    q.push({temp,curr.second+1});
                }
            }
        }
        return -1;
    }
    int openLock(vector<string>& deadends, string target){
        unordered_set<string> deads(deadends.begin(),deadends.end());
        return bfs(deads,target);
    }
