LC link: https://leetcode.com/problems/rotting-oranges/


    int orangesRotting(vector<vector<int>>& grid) {
        int m=grid.size();
        int n=grid[0].size();
        queue<vector<int>>q;
        vector<vector<int>> vis(m,vector<int>(n,0));
        for(int i=0;i<m;i++) {
            for(int j=0;j<n;j++){
                if(grid[i][j]==2){
                    q.push({i,j,0});
                    vis[i][j]=1;
                }
            }
        }
        int dy[]={-1,1,0,0};
        int dx[]={0,0,-1,1};
        int time=0;
        while(!q.empty()){
            vector<int> curr=q.front();
            q.pop();
            time=curr[2];
            for(int k=0;k<4;k++){
                int x = curr[0] + dx[k];
                int y = curr[1] + dy[k];
                if(x>=m || y>=n || x<0 || y<0) continue;
                if(!vis[x][y] && grid[x][y]==1){
                    q.push({x,y,curr[2]+1});
                    vis[x][y]=1;
                }
            }
        }
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(grid[i][j]==1 && vis[i][j]==0) return -1;
            }
        }
        return time;
    }
