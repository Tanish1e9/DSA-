LC link: https://leetcode.com/problems/satisfiability-of-equality-equations/

class DSU{
    public:
    vector<int>parent,size;
    DSU(int n){
        size=vector<int>(n,1);
        parent=vector<int>(n);
        for(int i=0;i<n;i++) parent[i]=i;
    }
    int find_par(int node){
        if(parent[node]==node)return node;
        return parent[node]=find_par(parent[node]);
    }
    void union_by_size(int u,int v){
        int ult_u=find_par(u);
        int ult_v=find_par(v);
        if(ult_u==ult_v) return;
        if(size[ult_u]<size[ult_v]){
            parent[ult_u]=ult_v;
            size[ult_v]+=size[ult_u];
        }
        else{
            parent[ult_v]=ult_u;
            size[ult_u]+=size[ult_v];
        }
    }
};
class Solution {
public:
    bool equationsPossible(vector<string>& equations) {
        DSU ds(26);
        for(auto &vec:equations){
            if(vec[1]==vec[2]){
                ds.union_by_size(vec[0]-'a',vec[3]-'a');
            }
        }
        for(auto&vec:equations){
            if(vec[1]!=vec[2]){
                if(ds.find_par(vec[0]-'a')==ds.find_par(vec[3]-'a')) return false;
            }
        }
        return true;
    }
};
