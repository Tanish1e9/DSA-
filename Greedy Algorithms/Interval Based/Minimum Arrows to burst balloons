LC link: https://leetcode.com/problems/minimum-number-of-arrows-to-burst-balloons/description/

    // M-1 end points k base pe sort kra gya h and accordingly
    static bool comp(vector<int>&a,vector<int>&b){
        return a[1]<b[1];
    }
    int findMinArrowShots(vector<vector<int>>& points){
        sort(points.begin(),points.end(),comp);
        int ans=1;
        int last=points[0][1];
        for(int i=1;i<points.size();i++){
            if(points[i][0]<=last) continue;
            last=points[i][1];
            ans++;
        }
        return ans;
    }


    // M-2 start points k base par sort kra gya h
    int findMinArrowShots(vector<vector<int>>& points) {
         sort(points.begin(),points.end());
         int ans=1;
         int last = points[0][1];
         for(int i=1;i<points.size();i++){
             if(points[i][0] > last){
                 last = points[i][1];
                 ans++;
             }
             else last = min(last,points[i][1]);`
         }
         return ans;
    }
