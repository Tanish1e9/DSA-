LC link:https://leetcode.com/problems/reverse-linked-list/

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    // ListNode* reverseList(ListNode* head) {
    //     if(head==NULL || head->next==NULL) return head;
    //     ListNode*cur=head;
    //     ListNode*prev=0;
    //     while(cur){
    //         ListNode*temp=cur->next;
    //         cur->next=prev;
    //         prev=cur;
    //         cur=temp;
    //     }
    //     return prev;
    // }
    ListNode* reverseList(ListNode* head) {   
        if(head==0 || head->next==0) return head;
        ListNode*temp=reverseList(head->next);
        head->next->next=head;
        head->next=0;
        return temp;
    }
};
