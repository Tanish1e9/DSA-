LC link: https://leetcode.com/problems/sort-list/

  ListNode*merge(ListNode*a,ListNode*b){
        ListNode*dummy=new ListNode(-1);
        ListNode*prev=dummy;
        ListNode*t1=a,*t2=b;
        while(t1&&t2){
            if(t1->val<t2->val){
                prev->next=t1;
                prev=t1;
                t1=t1->next;
            }
            else{
                prev->next=t2;
                prev=t2;
                t2=t2->next;
            }
        }
        if(t2) prev->next=t2;
        else prev->next=t1;
        prev=dummy->next;
        delete dummy;
        return prev;
    }
    ListNode*mergesort(ListNode*head){
        if(head->next==NULL) return head;
        ListNode*fast=head,*slow=head;
        while(fast->next && fast->next->next){
            fast=fast->next->next;
            slow=slow->next;
        }
        ListNode*temp=slow->next;
        slow->next=NULL;
        ListNode*a=mergesort(head);
        ListNode*b=mergesort(temp);
        return merge(a,b);
    }
    ListNode* sortList(ListNode* head) {
        if(head==NULL || head->next==NULL) return head;
        return mergesort(head);
    }
