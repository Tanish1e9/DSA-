GFG link: https://www.geeksforgeeks.org/problems/prime-factorization-using-sieve/1

    // waha pe ek sieve likha hoga usko khali rhne dena
    // ye smallest prime factor wale concept se prime factorisation aaya h aur number of divisors count krne me bhi use ho skta
    // see CSES problem "Counting Divisors"
    // waha pe TrootN  bhi TLE maar rha 
    // T logN + 1e6loglog1e6 hi chal payega
    // isse bhi better solution h uska dekho repo me but ye yad rakhna ki SPF is used for prime factorisation O(log n) me factorise kr dega

    void sieve2(int n,vector<int>&sieve){
        for(int i=2;i<=n/i;i++){
            if(sieve[i]!=i) continue;
            for(int j=i*i;j<=n;j+=i){
                if(sieve[j]==j) sieve[j]=i;
            }
        }
    }
    vector<int> findPrimeFactors(int N) {
        vector<int>sieve(N+1);
        for(int i=0;i<=N;i++) sieve[i]=i;
        sieve2(N,sieve);
        vector<int>ans;
        while(N!=1){
            ans.push_back(sieve[N]);
            N/=sieve[N];
        }
        return ans;
    }
