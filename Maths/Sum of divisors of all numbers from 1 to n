GFG link: https://www.geeksforgeeks.org/problems/sum-of-all-divisors-from-1-to-n4738/1

    // M-1 Brute O(n root n) TLE
    long long sum(int n){
        long long ans=0;
        for(long long i=1;i<=n/i;i++){
            if(n%i!=0) continue;
            if(i==n/i) ans+=i;
            else ans+= i + n/i;
        }
        return ans;
    }
    long long sumOfDivisors(int N)
    {
        long long ans=0;
        for(long long i=1;i<=N;i++){
            ans+=sum(i);
        }
        return ans;
    }

    // M-2 Better O(n) har ek number ka contribution kind of socho
    long long sumOfDivisors(int N)
    {
        long long ans=0;
        for(long long i=1;i<=N;i++){
            ans+=i*(N/i);
        }
        return ans;
    }

    // M-3 Optimal O(root n)
    // ek bar i ko as a number socho
    // aur fir i ko frequency soch k unn numbers ka sum nikal do jinka freq i hoga 
    // ye yaha se ayega  GIF(N/x)=i  isko solve kro x ka range mil jayega sum nikal dena
    long long sumOfDivisors(int N){
        long long ans=0;
        for(long long i=1;i<=N/i;i++){
            if(i==N/i) ans+=i*(N/i);
            else{
                ans+= i*(N/i);
                long long left = N/i;
                long long right = N/(i+1);
                ans+= ((left*(left+1))/2 - (right*(right+1))/2)*i;
            }
        }
        return ans;
    }

    CSES: https://cses.fi/problemset/task/1082
    n<=1e12 k lie h ye dekho left * (left+1) me overflow ho jayega long data type ka since 1e12 h na
    // islie binary multiplication lagaye h but divide pehle krna padega wrna baad me inverse se multiply krna hoga bas yahi dhyan rakhna
    // and difference lete hue mod add kr dena that's it
    #include<bits/stdc++.h>
    using namespace std;
    #define int long long
    int mod=1e9+7;
    signed main(){
        ios::sync_with_stdio(0);
        cin.tie(0);
        cout.tie(0);
        int n;
        cin >> n;
        int ans=0;
        for(int i=1;i<=n/i;i++){
            ans=(ans+i*(n/i))%mod;
            if(i!=n/i){
                int left = (n/i);
                int right = (n/(i+1));
                int l_sum = 0,r_sum=0;
                if(left&1) l_sum = ((left%mod) * (((left+1)/2)%mod))%mod;
                else l_sum = (((left/2)%mod) * ((left+1)%mod))%mod;
                
                if(right&1) r_sum = ((right%mod) * (((right+1)/2)%mod))%mod;
                else r_sum = (((right/2)%mod) * ((right+1)%mod))%mod;
                
                ans = (ans+ i*(l_sum - r_sum + mod))%mod;
            }
        }
        cout << ans << endl;
        return 0;
    }
