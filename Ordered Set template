#include<bits/stdc++.h>
#include<ext/pb_ds/assoc_container.hpp>
#include<ext/pb_ds/tree_policy.hpp>
using namespace std;
using namespace __gnu_pbds;
template<class T> using oset =tree<T, null_type, less<T>, rb_tree_tag,tree_order_statistics_node_update>;
// *s.find_by_order(x)  -- xth index pe batata h
// s.order_of_key(y) -- y se strictly smaller kitne elements h ye batata hai
int main(){
  	oset<int> s;
  	int n,k;
  	cin >> n >> k;
  	for(int i=1;i<=n;i++) s.insert(i);
  	int last = 0;
  	while(!s.empty()){
  		last = (last + k)%s.size();
  		cout << *s.find_by_order(last) << " ";
  		s.erase(s.find_by_order(last));
  	}
  	cout << endl;
  	return 0;
}
