LC link: https://leetcode.com/problems/subarrays-with-k-different-integers/

    // isme if we try to count exactly tab bhut saare subarrays chootenge
    eg k=3
    1 1 1 3 5 7 8 9
    // yaha if a subarray has k integers then it's not sure ki uske saara further subarrays me bhi k hoga (<k ho skta na)
    // to yaha we will just add one by one
    // but one by one me to bhut subarrays miss honge
    // islie surity ni h ki left move kre ya right
    // that's why <=k Ke lie solve kia

    int func(vector<int>&nums,int k){
        if(k<0) return 0;
        int l=0,r=0,count=0;
        int n=nums.size();
        unordered_map<int,int>freq;
        while(r<n){
            freq[nums[r]]++;
            while(freq.size()>k){
                freq[nums[l]]--;
                if(freq[nums[l]]==0) freq.erase(nums[l]);
                l++;
            }
            count+=r-l+1;
            r++;
        }
        return count;
    }
    int subarraysWithKDistinct(vector<int>& nums, int k) {
        // O(4n),O(1)
        return func(nums,k) - func(nums,k-1);
        
    }
