LC link: https://leetcode.com/problems/count-unique-characters-of-all-substrings-of-a-given-string/description/

    int uniqueLetterString(string s) {
        // O(n^2),O(26)
        // int n=s.size();
        // int sum=0;
        // for(int i=0;i<n;i++){
        //     int count=0;
        //     vector<int>freq(26,0);
        //     for(int j=i;j<n;j++){
        //         freq[s[j]-'A']++;
        //         if(freq[s[j]-'A']==1) count++;
        //         else if(freq[s[j]-'A']==2) count--;
        //         sum+=count;
        //     }
        // }
        // return sum;

        // O(26*n),O(n)
        // int n=s.size();
        // int sum=0;
        // for(char c='A';c<='Z';c++){
        //     vector<int>dp={-1};
        //     for(int i=0;i<n;i++){
        //         if(s[i]==c) dp.push_back(i);
        //     }
        //     dp.push_back(n);
        //     for(int i=1;i<dp.size()-1;i++){
        //         sum+=(dp[i+1]-dp[i]) * (dp[i]-dp[i-1]);
        //     }
        // }
        // return sum;

        // O(26*n),O(1)
        // int n=s.size();
        // int sum=0;
        // for(char c='A';c<='Z';c++){
        //     int sec_last=-1,last=-1;
        //     for(int i=0;i<=n;i++){
        //         if(i==n || s[i]==c){
        //             sum+=(i-last)*(last-sec_last);
        //             sec_last=last;
        //             last=i;
        //         }
        //     }
        // }
        // return sum;

        // O(n+26),O(26)
        int n=s.size();
        int sum=0;
        vector<pair<int,int>> vec(26,{-1,-1});
        for(int i=0;i<n;i++){
            sum+=(i-vec[s[i]-'A'].second)*(vec[s[i]-'A'].second-vec[s[i]-'A'].first);
            vec[s[i]-'A'].first=vec[s[i]-'A'].second;
            vec[s[i]-'A'].second=i;
        }
        for(int i=0;i<26;i++){
            sum+=(n-vec[i].second)*(vec[i].second-vec[i].first);
        }
        return sum;
    }
