LC link: https://leetcode.com/problems/maximum-score-from-removing-substrings/description/

// this is a O(n),O(n) approach
// isme we will greedily remove that substring jo jada point de and baad me dusra wala
// why does it always work?  "abab" leke dekh lo even if you choose "ba" greedily you will get to remove "ab" again
// now yaha na jab stack se bhej rhe string to reverse ho ja rha h
// to dusra substring ko bhi actually reverse krke wo pehle wala hi ban gya
// halanki dekho point alag alag h 

string remove(string&s,string tobe,int point,int& ans){
        stack<char>st;
        for(int i=0;i<s.size();i++){
            if(s[i]==tobe[1]){
                if(!st.empty() && st.top()==tobe[0]){
                    ans+=point;
                    st.pop();
                }
                else st.push(s[i]);
            }
            else st.push(s[i]);
        }
        string temp;
        while(!st.empty()){
            temp.push_back(st.top());
            st.pop();
        }
        return temp;
    }
    int maximumGain(string s, int x, int y) {
        int ans=0;
        string temp;
        if(x>y){
            temp = remove(s,"ab",x,ans);
            temp = remove(temp,"ab",y,ans);
        }
        else{
            temp = remove(s,"ba",y,ans);
            temp = remove(temp,"ba",x,ans);
        }
        return ans;
    }
