Code Studio link: https://www.naukri.com/code360/problems/tree-traversal_981269?leftPanelTabValue=SUBMISSION

// Recursive
void trav(TreeNode*root,vector<vector<int>>&ans){
    if(root==0) return;

    ans[1].push_back(root->data);           // pre me daal do
    trav(root->left,ans);
    ans[0].push_back(root->data);           // left wala hoke aya to inorder me daal die
    trav(root->right,ans);
    ans[2].push_back(root->data);           // left right dono ho gya to postorder me daal die
}
vector<vector<int>> getTreeTraversal(TreeNode *root){
    vector<vector<int>> ans(3);
    trav(root,ans);
    return ans;    
}


// Iterative
// TC is O(3N) and SC is O(3N)
vector<vector<int>> getTreeTraversal(TreeNode *root){
    vector<vector<int>> ans(3);
    stack<pair<TreeNode*,int>> s;
    s.push({root,1});
    while(!s.empty()){
        if(s.top().second==1){          // pre me jayega
            ans[1].push_back(s.top().first->data);
            s.top().second++;
            if(s.top().first->left) s.push({s.top().first->left, 1});
        }
        else if(s.top().second==2){         // inorder me jayega
            ans[0].push_back(s.top().first->data);
            s.top().second++;
            if(s.top().first->right) s.push({s.top().first->right, 1});
        }
        else{   // postorder me
            ans[2].push_back(s.top().first->data);
            s.pop();
        }
    }
    return ans;
}
