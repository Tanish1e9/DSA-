LC link: https://leetcode.com/problems/binary-tree-preorder-traversal/

// Recursive
  void pre(TreeNode*root,vector<int>&ans){
      if(root==NULL) return;
      ans.push_back(root->val);
      pre(root->left,ans);
      pre(root->right,ans);
  }
  vector<int> preorderTraversal(TreeNode* root) {
      vector<int> ans;
      pre(root,ans);
      return ans;
  }


// Iterative
vector<int> preorderTraversal(TreeNode* root) {
        if(root==NULL) return {};
        vector<int> ans;
        stack<TreeNode*> s;
        s.push(root);
        while(!s.empty()){
            TreeNode*curr=s.top();
            s.pop();
            ans.push_back(curr->val);
            if(curr->right) s.push(curr->right);        // dekh lo yaha right pehle daale h it's not a mistake ... Think!!!
            if(curr->left) s.push(curr->left);
        }
        return ans;
    }
