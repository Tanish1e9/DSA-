LC link: https://leetcode.com/problems/word-search-ii/

// Ye hai normal code TLE maar rha, since word search krne me bhut time lage ja rha
int dx[4] = {-1,1,0,0};
int dy[4] = {0,0,-1,1};
bool dfs(int i, int j, int l, string &word, auto &vis, auto &board) {
    if(word[l]!=board[i][j]) return false;
    // ye aise likhna jroori h... since maan le agar ek hi character ka board hua aur wo char search kie
    // to fir kahi jane ko jagah hi nahi h, ans false aa jayega na jabki true return krna tha
    if(l==word.size()-1) return true;
    vis[i][j] = true;
    for(int k=0;k<4;k++) {
        int x = i + dx[k];
        int y = j + dy[k];
        if(x<0 || y<0 || x>=board.size() || y>=board[0].size() || vis[x][y]) continue;
        if(dfs(x,y,l+1,word,vis,board)) return true;
    }
    vis[i][j] = false;
    return false;
}
bool exist(string &word, auto &board) {
    int n = board.size();
    int m = board[0].size();
    vector<vector<bool>> vis(n, vector<bool>(m, false));
    for(int i=0;i<n;i++) {
        for(int j=0;j<m;j++) {
            if(dfs(i,j,0,word,vis,board)) return true;
        }
    }
    return false;
}
vector<string> findWords(vector<vector<char>>& board, vector<string>& words) {
    vector<string> ans;
    for(string &word:words) {
        if(exist(word, board)) ans.push_back(word);
    }
    return ans;
}
